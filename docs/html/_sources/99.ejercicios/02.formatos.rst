.. _ej-formatos:

Ejercicios sobre formatos
=========================
#. Resuelva el mismo problema que en el :ref:`ejercicio 4 de la primera unidad
   <ej-archivos_4>`, pero almacenando la información en un |CSV|. Si escribió
   adecuadamente el código de aquel ejercicio, esto no debería suponerle ningún
   problema.

#. Lo mismo, pero almacenando la información en un |JSON|. Utilice la librería
   de Google :ref:`GSON <json-gson>`.

#. Lo mismo en |JSON|, pero con la :ref:`librería de Jackson <json-jackson>`.

   .. _ej-formatos-4:

#. Recapitule todo lo hecho en los ejercicios anteriores y haga la misma aplicación,
   pero con las siguientes características:

   a. La aplicación puede utilizar como formato de almacenamiento |CSV|, |JSON| o
      la serialización directa de objetos. Qué formato se utilice se le puede
      preguntar al usuario como pregunta adicional de la interfaz de texto.

   #. Alternativamente a la interfaz de texto, la aplicación debería poderse
      correr en modo *automático*. En este modo, el propio código tiene incluidos
      dos o tres estudiantes que son los que se escriben en el archivo. De este
      modo, podremos probar el código sin el tedio de tener que meter datos por
      teclado.

   #. Se leen argumentos por línea de comandos (puede usar la librería `Apache
      Commons CLI <https://commons.apache.org/proper/commons-cli/>`_) para elegir
      qué interfaz, qué formato de almacenamiento y qué nombre de archivo se
      utilizan.

.. |CSV| replace:: :abbr:`CSV (Comma-separated values)`
.. |JSON| replace:: :abbr:`JSON (JavaScript Object Notation)`
